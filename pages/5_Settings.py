"""
Settings Page
User preferences, privacy controls, and account management
"""

import streamlit as st
from datetime import datetime

st.set_page_config(
    page_title="Param√®tres - CarIAct√©rologie",
    page_icon="‚öôÔ∏è",
    layout="wide"
)

def main():
    """Main settings interface"""
    
    # Header
    st.markdown("""
    <div style="background: linear-gradient(90deg, #667eea 0%, #764ba2 100%); padding: 1rem; border-radius: 10px; margin-bottom: 2rem; color: white; text-align: center;">
        <h1>‚öôÔ∏è Param√®tres et Pr√©f√©rences</h1>
        <p>G√©rez votre compte, confidentialit√© et pr√©f√©rences d'application</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Settings tabs
    tab1, tab2, tab3, tab4, tab5 = st.tabs(["üë§ Profil", "üîí Confidentialit√©", "üé® Interface", "üîî Notifications", "üíæ Donn√©es"])
    
    with tab1:
        st.markdown("### üë§ Profil Utilisateur")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**Informations Personnelles**")
            
            name = st.text_input("Nom Complet", value="Dr. Sarah Johnson")
            email = st.text_input("Adresse Email", value="sarah.johnson@example.com")
            
            # Age range for psychological context
            age_range = st.selectbox(
                "Tranche d'√Çge",
                ["18-25", "26-35", "36-45", "46-55", "56-65", "65+"],
                index=2
            )
            
            # Professional context
            profession = st.selectbox(
                "Profession",
                ["Sant√©", "√âducation", "Technologie", "Affaires", "Arts et Cr√©atif", "Autre"],
                index=1
            )
            
            # Goals for using the platform
            st.markdown("**Objectifs de D√©couverte de Soi**")
            goals = st.multiselect(
                "Que esp√©rez-vous accomplir ?",
                [
                    "Mieux comprendre ma personnalit√©",
                    "Am√©liorer les relations", 
                    "Guidance de carri√®re",
                    "Croissance personnelle",
                    "Intelligence √©motionnelle",
                    "Gestion du stress",
                    "Prise de d√©cision",
                    "Comp√©tences de communication"
                ],
                default=["Mieux comprendre ma personnalit√©", "Croissance personnelle"]
            )
        
        with col2:
            st.markdown("**R√©sum√© du Profil**")
            
            # Profile picture placeholder
            st.image("https://via.placeholder.com/150x150/667eea/white?text=SJ", width=150)
            
            if st.button("Changer la Photo", key="change_picture_btn"):
                st.info("Fonctionnalit√© de t√©l√©chargement de photo bient√¥t disponible !")
            
            st.markdown("**Informations du Compte**")
            st.info(f"**Membre depuis** : 1er janvier 2024")
            st.info(f"**Sessions totales** : 28")
            st.info(f"**Confiance de caract√®re** : 85%")
            st.info(f"**Type de caract√®re principal** : Sanguin")
            
            st.markdown("**Plan d'Abonnement**")
            st.success("‚úÖ **Plan Premium** - Toutes les fonctionnalit√©s d√©bloqu√©es")
            
            if st.button("G√©rer l'Abonnement", key="manage_subscription_btn"):
                st.info("Redirection vers la gestion de l'abonnement...")
        
        # Save profile changes
        if st.button("üíæ Sauvegarder les Modifications du Profil", use_container_width=True, key="save_profile_btn"):
            st.success("Profil mis √† jour avec succ√®s !")
    
    with tab2:
        st.markdown("### üîí Confidentialit√© et S√©curit√©")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**Contr√¥les de Confidentialit√© des Donn√©es**")
            
            # Privacy settings
            data_retention = st.selectbox(
                "P√©riode de R√©tention des Donn√©es",
                ["1 an", "2 ans", "5 ans", "Ind√©finie"],
                index=1
            )
            
            allow_analytics = st.checkbox("Autoriser les analyses d'utilisation anonymis√©es", value=True)
            allow_research = st.checkbox("Contribuer aux donn√©es de recherche psychologique", value=False)
            allow_sharing = st.checkbox("Autoriser le partage d'insights avec les prestataires de soins", value=False)
            
            st.markdown("**Gestion de la M√©moire**")
            auto_forget = st.checkbox("Oubli automatique des conversations sensibles", value=True)
            memory_encryption = st.checkbox("Chiffrer les m√©moires stock√©es", value=True)
            
            # Memory categories to store
            st.markdown("**Quoi Retenir**")
            remember_categories = st.multiselect(
                "Cat√©gories √† stocker en m√©moire √† long terme",
                [
                    "Insights de personnalit√©",
                    "Analyse de caract√®re",
                    "Patterns √©motionnels", 
                    "Tendances comportementales",
                    "Pr√©f√©rences personnelles",
                    "Objectifs et aspirations",
                    "Dynamiques relationnelles",
                    "Insights professionnels"
                ],
                default=["Insights de personnalit√©", "Analyse de caract√®re", "Patterns √©motionnels"]
            )
        
        with col2:
            st.markdown("**Param√®tres de S√©curit√©**")
            
            # Password change
            if st.button("üîê Changer le Mot de Passe", key="change_password_btn"):
                st.info("Le formulaire de changement de mot de passe appara√Ætrait ici")
            
            # Two-factor authentication
            two_factor = st.checkbox("Activer l'Authentification √† Deux Facteurs", value=False)
            if two_factor:
                st.info("üì± La configuration de l'authentification √† deux facteurs commencerait ici")
            
            # Session security
            st.markdown("**S√©curit√© de Session**")
            auto_logout = st.selectbox(
                "D√©connexion automatique apr√®s inactivit√©",
                ["15 minutes", "30 minutes", "1 heure", "2 heures", "Jamais"],
                index=2
            )
            
            # Privacy summary
            st.markdown("**R√©sum√© de Confidentialit√©**")
            st.info("üîí Vos conversations sont chiffr√©es")
            st.info("üõ°Ô∏è Aucune donn√©e vendue √† des tiers")
            st.info("üè• Stockage conforme HIPAA")
            st.info("üåç Conforme au RGPD")
            
            if st.button("üìã T√©l√©charger le Rapport de Confidentialit√©", key="download_privacy_btn"):
                st.success("Rapport de confidentialit√© g√©n√©r√© et t√©l√©charg√© !")
        
        # Privacy actions
        col3, col4 = st.columns(2)
        with col3:
            if st.button("üóëÔ∏è Supprimer des Donn√©es Sp√©cifiques", use_container_width=True, key="delete_specific_btn"):
                st.warning("L'interface de suppression de donn√©es appara√Ætrait ici")
        
        with col4:
            if st.button("üì§ Exporter Toutes les Donn√©es", use_container_width=True, key="export_data_privacy_btn"):
                st.success("Exportation des donn√©es initi√©e !")
    
    with tab3:
        st.markdown("### üé® Interface et Exp√©rience")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**Pr√©f√©rences Visuelles**")
            
            # Theme selection
            theme = st.selectbox(
                "Th√®me de l'Application",
                ["Clair", "Sombre", "Automatique (Syst√®me)", "Bleu Th√©rapeutique"],
                index=3
            )
            
            # Color scheme
            primary_color = st.color_picker("Couleur d'Accent Principal", "#667eea")
            
            # Font preferences
            font_size = st.selectbox(
                "Taille de Police",
                ["Petite", "Moyenne", "Grande", "Tr√®s Grande"],
                index=1
            )
            
            # Layout preferences
            sidebar_default = st.selectbox(
                "√âtat par D√©faut de la Barre Lat√©rale",
                ["√âtendue", "R√©duite", "Automatique"],
                index=0
            )
            
            st.markdown("**Disposition du Tableau de Bord**")
            dashboard_cards = st.multiselect(
                "Afficher sur le tableau de bord",
                [
                    "M√©triques de session",
                    "Confiance de caract√®re", 
                    "Insights r√©cents",
                    "Suivi d'humeur",
                    "Chronologie des progr√®s",
                    "Actions rapides",
                    "Badges de r√©ussite"
                ],
                default=["M√©triques de session", "Confiance de caract√®re", "Insights r√©cents"]
            )
        
        with col2:
            st.markdown("**Pr√©f√©rences d'Interaction**")
            
            # Chat settings
            typing_speed = st.slider("Vitesse de R√©ponse de l'IA", min_value=1, max_value=5, value=3)
            show_timestamps = st.checkbox("Afficher les horodatages des messages", value=True)
            markdown_rendering = st.checkbox("Activer le formatage de texte riche", value=True)
            
            # Analysis preferences
            st.markdown("**Affichage de l'Analyse**")
            show_confidence = st.checkbox("Afficher les scores de confiance", value=True)
            animated_charts = st.checkbox("Visualisations anim√©es", value=True)
            detailed_explanations = st.checkbox("Afficher les explications d√©taill√©es des traits", value=True)
            
            # Accessibility
            st.markdown("**Accessibilit√©**")
            high_contrast = st.checkbox("Mode √† contraste √©lev√©", value=False)
            screen_reader = st.checkbox("Optimisations pour lecteur d'√©cran", value=False)
            keyboard_nav = st.checkbox("Navigation clavier am√©lior√©e", value=False)
            
            # Preview
            st.markdown("**Aper√ßu du Th√®me**")
            if theme == "Bleu Th√©rapeutique":
                st.markdown("""
                <div style="background: linear-gradient(90deg, #667eea 0%, #764ba2 100%); color: white; padding: 1rem; border-radius: 8px; text-align: center;">
                    <h4>Th√®me Bleu Th√©rapeutique</h4>
                    <p>Couleurs apaisantes con√ßues pour le bien-√™tre psychologique</p>
                </div>
                """, unsafe_allow_html=True)
        
        if st.button("üé® Appliquer les Changements d'Interface", use_container_width=True, key="apply_interface_btn"):
            st.success("Pr√©f√©rences d'interface mises √† jour !")
    
    with tab4:
        st.markdown("### üîî Notifications et Rappels")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**Rappels de Session**")
            
            session_reminders = st.checkbox("Activer les rappels de session", value=True)
            
            if session_reminders:
                reminder_frequency = st.selectbox(
                    "Fr√©quence des Rappels",
                    ["Quotidien", "Tous les 2 jours", "Hebdomadaire", "Personnalis√©"],
                    index=2
                )
                
                reminder_time = st.time_input("Heure de rappel pr√©f√©r√©e", value=datetime.strptime("19:00", "%H:%M").time())
            
            st.markdown("**Notifications de Progr√®s**")
            milestone_notifications = st.checkbox("Notifications de jalons de caract√®re", value=True)
            insight_notifications = st.checkbox("Notifications de nouveaux insights", value=True)
            weekly_summary = st.checkbox("R√©sum√© hebdomadaire des progr√®s", value=True)
            
            st.markdown("**Notifications Syst√®me**")
            maintenance_notifications = st.checkbox("Notifications de maintenance", value=True)
            feature_updates = st.checkbox("Annonces de nouvelles fonctionnalit√©s", value=True)
            security_alerts = st.checkbox("Alertes de s√©curit√©", value=True)
        
        with col2:
            st.markdown("**Pr√©f√©rences de Livraison**")
            
            # Notification channels
            notification_channels = st.multiselect(
                "Canaux de Notification",
                ["Email", "Dans l'application", "Notifications push", "SMS"],
                default=["Email", "Dans l'application"]
            )
            
            # Email preferences
            st.markdown("**Notifications Email**")
            email_frequency = st.selectbox(
                "Fr√©quence des Emails",
                ["Imm√©diat", "R√©sum√© quotidien", "R√©sum√© hebdomadaire", "Jamais"],
                index=1
            )
            
            # Content preferences
            st.markdown("**Pr√©f√©rences de Contenu**")
            include_tips = st.checkbox("Inclure des conseils psychologiques", value=True)
            include_quotes = st.checkbox("Inclure des citations inspirantes", value=True)
            include_articles = st.checkbox("Inclure des articles connexes", value=False)
            
            # Quiet hours
            st.markdown("**Heures de Silence**")
            enable_quiet_hours = st.checkbox("Activer les heures de silence", value=True)
            
            if enable_quiet_hours:
                col_quiet1, col_quiet2 = st.columns(2)
                with col_quiet1:
                    quiet_start = st.time_input("De", value=datetime.strptime("22:00", "%H:%M").time())
                with col_quiet2:
                    quiet_end = st.time_input("√Ä", value=datetime.strptime("08:00", "%H:%M").time())
        
        if st.button("üîî Sauvegarder les Param√®tres de Notification", use_container_width=True, key="save_notifications_btn"):
            st.success("Pr√©f√©rences de notification mises √† jour !")
    
    with tab5:
        st.markdown("### üíæ Gestion des Donn√©es")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("**Aper√ßu des Donn√©es**")
            
            # Storage usage
            st.metric("Stockage Utilis√©", "2.4 GB", "sur 10 GB")
            
            # Data breakdown
            data_breakdown = {
                "Historique de Conversation": "1.2 GB",
                "Donn√©es d'Analyse": "800 MB", 
                "Rapports G√©n√©r√©s": "350 MB",
                "Pr√©f√©rences Utilisateur": "50 MB"
            }
            
            for category, size in data_breakdown.items():
                st.markdown(f"**{category}**: {size}")
            
            st.markdown("**Sant√© des Donn√©es**")
            st.success("‚úÖ Toutes les donn√©es sauvegard√©es")
            st.success("‚úÖ Aucune corruption d√©tect√©e")
            st.success("‚úÖ Chiffrement actif")
            
            # Backup settings
            st.markdown("**Pr√©f√©rences de Sauvegarde**")
            auto_backup = st.checkbox("Sauvegarde quotidienne automatique", value=True)
            backup_frequency = st.selectbox(
                "Fr√©quence de Sauvegarde",
                ["Quotidienne", "Hebdomadaire", "Mensuelle"],
                index=0
            )
        
        with col2:
            st.markdown("**Actions sur les Donn√©es**")
            
            # Export options
            if st.button("üì§ Exporter Toutes les Donn√©es", use_container_width=True, key="export_data_backup_btn"):
                with st.spinner("Pr√©paration de l'exportation des donn√©es..."):
                    import time
                    time.sleep(2)
                    st.success("‚úÖ Exportation des donn√©es pr√™te pour le t√©l√©chargement !")
            
            # Backup actions
            if st.button("üíæ Cr√©er une Sauvegarde Manuelle", use_container_width=True, key="manual_backup_btn"):
                with st.spinner("Cr√©ation de la sauvegarde..."):
                    import time
                    time.sleep(2)
                    st.success("‚úÖ Sauvegarde cr√©√©e avec succ√®s !")
            
            # Data cleanup
            st.markdown("**Nettoyage des Donn√©es**")
            if st.button("üßπ Nettoyer les Fichiers Temporaires", use_container_width=True, key="clean_temp_btn"):
                st.success("‚úÖ Fichiers temporaires nettoy√©s (150 MB lib√©r√©s)")
            
            if st.button("üóëÔ∏è Supprimer les Anciennes Sessions", use_container_width=True, key="delete_old_sessions_btn"):
                st.warning("‚ö†Ô∏è Ceci supprimera les sessions plus anciennes que votre p√©riode de r√©tention")
            
            # Dangerous actions
            st.markdown("**‚ö†Ô∏è Actions Dangereuses**")
            
            with st.expander("üóëÔ∏è Supprimer Toutes les Donn√©es"):
                st.error("**Attention** : Cette action ne peut pas √™tre annul√©e !")
                confirm_text = st.text_input("Tapez 'SUPPRIMER TOUTES LES DONNEES' pour confirmer :")
                
                if confirm_text == "SUPPRIMER TOUTES LES DONNEES":
                    if st.button("üóëÔ∏è Supprimer D√©finitivement Toutes les Donn√©es", key="delete_all_data_btn"):
                        st.error("La suppression des donn√©es serait ex√©cut√©e ici")
            
            with st.expander("üîÑ R√©initialiser l'Analyse de Caract√®re"):
                st.warning("Ceci r√©initialisera votre analyse de caract√®re et repartira √† z√©ro")
                if st.button("üîÑ R√©initialiser l'Analyse", key="reset_analysis_btn"):
                    st.info("Analyse de caract√®re r√©initialis√©e - les nouvelles sessions reconstruiront votre profil")
    
    # Footer
    st.markdown("---")
    st.markdown("""
    <div style="text-align: center; color: #888; padding: 1rem;">
        <p><strong>Param√®tres CarIAct√©rologie</strong></p>
        <p>Tous les param√®tres sont automatiquement sauvegard√©s. Les changements prennent effet imm√©diatement.</p>
        <p>Pour le support, contactez : <a href="mailto:support@cariacterology.ai">support@cariacterology.ai</a></p>
    </div>
    """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()